{"version":3,"sources":["components/CityInfo/CityInfo.jsx","components/StatusBar/StatusBar.jsx","components/forecast/WeeklyForecast.jsx","images/hr.jpg","images/c.jpg","images/hc.jpg","images/s.jpg","images/lc.jpg","images/sn.jpg","images/h.jpg","images/t.jpg","images/sl.jpg","images/lr.jpg","containers/WeatherData/WeatherData.jsx","App.js","reportWebVitals.js","index.js"],"names":["CityInfo","props","currentWeth","consolidated_weather","title","sun_rise","sun_set","Container","Row","Col","md","className","applicable_date","Date","toDateString","span","offset","toLocaleTimeString","xs","lg","width","height","data","weather_state_abbr","type","the_temp","toFixed","StatusBar","humidity","air_pressure","wind_speed","predictability","visibility","WeeklyForecast","forecastWeather","align","WeatherData","useState","setcurrentWeth","forcasttWeth","setForcasttWeth","loading","setLoading","error","setError","location","useRef","woeid","setWoeid","weekday","useEffect","axios","get","then","wethData","err","requestData","Spinner","animation","variant","forecastData","map","weather","i","getDay","parseInt","min_temp","max_temp","sectionStyle","backgroundRepeat","backgroundAttachment","backgroundSize","backgroundImage","weatherState","c","h","hc","hr","lc","lr","s","sn","t","sl","String","includes","fluid","style","Form","noGutters","sm","Control","ref","size","placeholder","Button","onClick","e","preventDefault","current","value","undefined","alert","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad053500.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\n\r\nexport default function CityInfo(props) {\r\n\tconst { consolidated_weather, title, sun_rise, sun_set } = props.currentWeth\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={3}>\r\n\t\t\t\t\t\t<h2 className=\"mt-5\">{title}</h2>\r\n\t\t\t\t\t\t<h3>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(consolidated_weather[0].applicable_date = new Date().toDateString())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t<Col md={{ span: 4, offset: 5 }}>\r\n\t\t\t\t\t\t<h3 className=\"mt-5\">\r\n\t\t\t\t\t\t\t{new Date(\r\n\t\t\t\t\t\t\t\tconsolidated_weather[0].applicable_date\r\n\t\t\t\t\t\t\t).toLocaleTimeString()}\r\n\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\tsunrise: {new Date(sun_rise).toLocaleTimeString()} <br />\r\n\t\t\t\t\t\t\tsunset: {new Date(sun_set).toLocaleTimeString()}\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t\t<Container>\r\n\t\t\t\t<Row xs={2} md={3} lg={6}>\r\n\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t<object\r\n\t\t\t\t\t\t\tclassName=\"mt-3\"\r\n\t\t\t\t\t\t\twidth=\"220\"\r\n\t\t\t\t\t\t\theight=\"110\"\r\n\t\t\t\t\t\t\tdata={\r\n\t\t\t\t\t\t\t\t\"https://www.metaweather.com/static/img/weather/\" +\r\n\t\t\t\t\t\t\t\tconsolidated_weather[0].weather_state_abbr +\r\n\t\t\t\t\t\t\t\t\".svg\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ttype=\"image/svg+xml\">\r\n\t\t\t\t\t\t\tsomthing\r\n\t\t\t\t\t\t</object>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col className=\"mt-5\">\r\n\t\t\t\t\t\t<h4 className=\"textH4\">Today</h4>\r\n\t\t\t\t\t\t<h3>{consolidated_weather[0].the_temp.toFixed(2)} &#xb0;C</h3>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport \"./StatusBar.css\"\r\nimport { Row, Col, Container } from \"react-bootstrap\"\r\n\r\nexport default function StatusBar(props) {\r\n\tconst {\r\n\t\thumidity,\r\n\t\tair_pressure,\r\n\t\twind_speed,\r\n\t\tpredictability,\r\n\t\tvisibility\r\n\t} = props.currentWeth.consolidated_weather[0]\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Container className=\"pt-2\">\r\n\t\t\t\t<Row xs={2} md={4} lg={5} className=\"shadow\">\r\n\t\t\t\t\t<Col>Humidity: {humidity}%</Col>\r\n\t\t\t\t\t<Col>Pressure: {air_pressure}mb</Col>\r\n\t\t\t\t\t<Col>Wind: {wind_speed.toFixed(2)}mph</Col>\r\n\t\t\t\t\t<Col>predictability: {predictability}%</Col>\r\n\t\t\t\t\t<Col>Visibility: {visibility.toFixed(2)}miles</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\nimport { Row, Container } from \"react-bootstrap\"\r\n\r\nfunction WeeklyForecast({ forecastWeather }) {\r\n\treturn (\r\n\t\t<div align=\"center\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Row xs={2} md={5} lg={6}>\r\n\t\t\t\t\t{forecastWeather}\r\n\t\t\t\t</Row>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default WeeklyForecast\r\n","export default __webpack_public_path__ + \"static/media/hr.b274f31d.jpg\";","export default __webpack_public_path__ + \"static/media/c.1e81aa09.jpg\";","export default __webpack_public_path__ + \"static/media/hc.604ff12a.jpg\";","export default __webpack_public_path__ + \"static/media/s.3c7523e0.jpg\";","export default __webpack_public_path__ + \"static/media/lc.8cc03901.jpg\";","export default __webpack_public_path__ + \"static/media/sn.e3581a88.jpg\";","export default __webpack_public_path__ + \"static/media/h.46a3f5e2.jpg\";","export default __webpack_public_path__ + \"static/media/t.f853bd4d.jpg\";","export default __webpack_public_path__ + \"static/media/sl.f3a53c80.jpg\";","export default __webpack_public_path__ + \"static/media/lr.ad272800.jpg\";","import React, { useEffect, useState, useRef } from \"react\"\r\nimport axios from \"axios\"\r\nimport CityInfo from \"../../components/CityInfo/CityInfo\"\r\nimport StatusBar from \"./../../components/StatusBar/StatusBar\"\r\nimport WeeklyForecast from \"../../components/forecast/WeeklyForecast\"\r\nimport { Form, Button, Row, Col, Container, Spinner } from \"react-bootstrap\"\r\nimport hr from \"../../images/hr.jpg\"\r\nimport c from \"../../images/c.jpg\"\r\nimport hc from \"../../images/hc.jpg\"\r\nimport s from \"../../images/s.jpg\"\r\nimport lc from \"../../images/lc.jpg\"\r\nimport sn from \"../../images/sn.jpg\"\r\nimport h from \"../../images/h.jpg\"\r\nimport t from \"../../images/t.jpg\"\r\nimport sl from \"../../images/sl.jpg\"\r\nimport lr from \"../../images/lr.jpg\"\r\n\r\nexport default function WeatherData() {\r\n\tconst [currentWeth, setcurrentWeth] = useState()\r\n\tconst [forcasttWeth, setForcasttWeth] = useState()\r\n\tconst [loading, setLoading] = useState(true)\r\n\tconst [error, setError] = useState()\r\n\tconst location = useRef()\r\n\tconst [woeid, setWoeid] = useState(1979455)\r\n\tconst weekday = [\r\n\t\t\"Sunday\",\r\n\t\t\"Monday\",\r\n\t\t\"Tuesday\",\r\n\t\t\"Wednesday\",\r\n\t\t\"Thursday\",\r\n\t\t\"Friday\",\r\n\t\t\"Saturday\"\r\n\t]\r\n\r\n\tuseEffect(() => {\r\n\t\tfunction requestData() {\r\n\t\t\ttry {\r\n\t\t\t\taxios\r\n\t\t\t\t\t.get(\r\n\t\t\t\t\t\t`https://tranquil-cove-12072.herokuapp.com/https://www.metaweather.com/api/location/${woeid}/`\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.then((wethData) => {\r\n\t\t\t\t\t\tsetcurrentWeth(wethData.data)\r\n\t\t\t\t\t\tsetForcasttWeth(wethData.data)\r\n\t\t\t\t\t\tsetLoading(false)\r\n\t\t\t\t\t})\r\n\t\t\t} catch (err) {\r\n\t\t\t\tsetError(err)\r\n\t\t\t}\r\n\t\t}\r\n\t\trequestData()\r\n\t}, [woeid])\r\n\r\n\tconst getLocation = (e) => {\r\n\t\te.preventDefault()\r\n\t\ttry {\r\n\t\t\taxios\r\n\t\t\t\t.get(\r\n\t\t\t\t\t`https://tranquil-cove-12072.herokuapp.com/https://www.metaweather.com/api/location/search/?query=${location.current.value}`\r\n\t\t\t\t)\r\n\r\n\t\t\t\t.then((location) => {\r\n\t\t\t\t\tif (location.data[0] !== undefined) {\r\n\t\t\t\t\t\tsetWoeid(location.data[0].woeid)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talert(\"please type correct location!\")\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t} catch (err) {\r\n\t\t\tsetError(err)\r\n\t\t}\r\n\t}\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{error ? (\r\n\t\t\t\t\terror\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Spinner animation=\"border\" className=\"mt-5\" variant=\"secondary\" />\r\n\t\t\t\t)}\r\n\t\t\t\t<h6 className=\"text-secondary\">\r\n\t\t\t\t\thang on for a sec to see the best weather app!\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\tconst forecastData = forcasttWeth.consolidated_weather.map((weather, i) => (\r\n\t\t<Container className=\"mt-5\" key={i}>\r\n\t\t\t<Row className=\"mt-3 mb-2\">\r\n\t\t\t\t<Col>{weekday[new Date(weather.applicable_date).getDay()]}</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<object\r\n\t\t\t\t\t\twidth=\"65\"\r\n\t\t\t\t\t\theight=\"65\"\r\n\t\t\t\t\t\tdata={\r\n\t\t\t\t\t\t\t\"https://www.metaweather.com/static/img/weather/\" +\r\n\t\t\t\t\t\t\tweather.weather_state_abbr +\r\n\t\t\t\t\t\t\t\".svg\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttype=\"image/svg+xml\">\r\n\t\t\t\t\t\tsomthing\r\n\t\t\t\t\t</object>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"mt-3 mb-2\">\r\n\t\t\t\t<Col>{parseInt(weather.min_temp)}°C</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"mt-3 mb-4\">\r\n\t\t\t\t<Col>{parseInt(weather.max_temp)}°C</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"mt-3 mb-5\">\r\n\t\t\t\t<Col>{parseInt(weather.wind_speed)} Kph</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t))\r\n\r\n\tconst backgroundImage = () => {\r\n\t\tconst weatherState = [c, h, hc, hr, lc, lr, s, sn, t, sl]\r\n\t\tfor (let i = 0; i < 10; i++) {\r\n\t\t\tconst value = String(weatherState[i]).includes(\r\n\t\t\t\tcurrentWeth.consolidated_weather[0].weather_state_abbr\r\n\t\t\t)\r\n\t\t\tif (value) {\r\n\t\t\t\treturn weatherState[i]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconst sectionStyle = {\r\n\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\tbackgroundAttachment: \"fixed\",\r\n\t\tbackgroundSize: \"cover\",\r\n\t\tbackgroundImage: `url(${backgroundImage()})`\r\n\t}\r\n\treturn (\r\n\t\t<Container fluid className=\"img\" style={sectionStyle}>\r\n\t\t\t<Form className=\"pb-2\">\r\n\t\t\t\t<Row noGutters className=\"justify-content-md-left\">\r\n\t\t\t\t\t<Col sm=\"2\">\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\tref={location}\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\ttype=\"search\"\r\n\t\t\t\t\t\t\tplaceholder=\"type the city...\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col md=\"auto\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"success\"\r\n\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tonClick={getLocation}>\r\n\t\t\t\t\t\t\tsearch\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Form>\r\n\t\t\t<Container className=\"transbox mt-2\">\r\n\t\t\t\t<StatusBar currentWeth={currentWeth} />\r\n\t\t\t\t<CityInfo currentWeth={currentWeth} />\r\n\t\t\t\t<WeeklyForecast forecastWeather={forecastData} />\r\n\t\t\t</Container>\r\n\t\t</Container>\r\n\t)\r\n}\r\n","import \"./App.css\"\r\nimport WeatherData from \"./containers/WeatherData/WeatherData\"\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<WeatherData />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}